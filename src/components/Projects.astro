---
const vpsProjects = [
  {
    title: "Clúster de Alta Disponibilidad",
    description: "Implementación de un clúster de servidores con balanceo de carga y failover automático.",
    timeline: "2023 - Presente",
    role: "DevOps Engineer",
    technologies: ["Nginx", "HAProxy", "Docker Swarm", "Prometheus"],
    image: "https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=800&q=80",
    infrastructure: {
      servers: ["DigitalOcean", "AWS", "GCP"],
      monitoring: ["Grafana", "Prometheus", "ELK Stack"],
      security: ["Fail2Ban", "UFW", "Let's Encrypt", "CloudFlare"]
    },
    achievements: [
      "99.99% de uptime",
      "Reducción del 40% en costos de infraestructura",
      "Tiempo de recuperación < 30 segundos"
    ]
  },
  {
    title: "Plataforma de Automatización DevOps",
    description: "Sistema automatizado de despliegue y gestión de infraestructura.",
    timeline: "2022 - 2023",
    role: "DevOps Lead",
    technologies: ["Ansible", "Terraform", "Jenkins", "Kubernetes"],
    image: "https://images.unsplash.com/photo-1667372393119-3d4c48d07fc9?w=800&q=80",
    infrastructure: {
      cloud: ["AWS", "GCP", "Azure"],
      tools: ["Terraform", "Ansible", "Jenkins"],
      monitoring: ["Datadog", "NewRelic"]
    },
    achievements: [
      "Automatización del 90% de despliegues",
      "Reducción del tiempo de despliegue en un 75%",
      "Implementación de CI/CD completo"
    ]
  }
];

const backendProjects = [
  {
    title: "API Gateway Microservicios",
    description: "Gateway centralizado para gestión de microservicios con autenticación y rate limiting.",
    timeline: "2023",
    role: "Backend Architect",
    technologies: ["Node.js", "Express", "Redis", "MongoDB"],
    image: "https://images.unsplash.com/photo-1623282033815-40b05d96c903?w=800&q=80",
    features: [
      "Autenticación JWT",
      "Rate Limiting",
      "Circuit Breaker",
      "Logging Distribuido"
    ],
    metrics: [
      "Procesamiento de 5k+ req/seg",
      "Latencia < 50ms",
      "99.9% disponibilidad"
    ]
  },
  {
    title: "Sistema de Procesamiento en Tiempo Real",
    description: "Pipeline de procesamiento de datos en tiempo real con websockets.",
    timeline: "2022",
    role: "Backend Developer",
    technologies: ["Python", "FastAPI", "WebSocket", "RabbitMQ"],
    image: "https://images.unsplash.com/photo-1617042375876-a13e36732a04?w=800&q=80",
    features: [
      "Procesamiento Stream",
      "WebSocket Bidireccional",
      "Cola de Mensajes",
      "Escalado Horizontal"
    ],
    metrics: [
      "10k+ conexiones simultáneas",
      "Procesamiento en < 100ms",
      "Escalado automático"
    ]
  }
];

const frontendProjects = [
  {
    title: "Dashboard Analytics",
    description: "Panel de control interactivo con visualizaciones de datos en tiempo real.",
    timeline: "2023",
    role: "Frontend Lead",
    technologies: ["React", "D3.js", "TailwindCSS", "WebSocket"],
    image: "https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&q=80",
    features: [
      "Gráficos Interactivos",
      "Datos en Tiempo Real",
      "Temas Personalizables",
      "Modo Offline"
    ],
    metrics: [
      "Tiempo de carga < 2s",
      "90+ puntuación Lighthouse",
      "60% menos de uso de datos"
    ]
  },
  {
    title: "Plataforma E-learning",
    description: "Sistema de aprendizaje en línea con contenido interactivo y seguimiento de progreso.",
    timeline: "2022",
    role: "Frontend Developer",
    technologies: ["Vue.js", "Nuxt", "GraphQL", "TailwindCSS"],
    image: "https://images.unsplash.com/photo-1516321318423-f06f85e504b3?w=800&q=80",
    features: [
      "Contenido Interactivo",
      "Progreso Offline",
      "Video Streaming",
      "Gamificación"
    ],
    metrics: [
      "Retención de usuarios +45%",
      "Engagement +60%",
      "Satisfacción 4.8/5"
    ]
  }
];

const databaseProjects = [
  {
    title: "Sistema de Replicación Multi-región",
    description: "Implementación de base de datos distribuida con replicación multi-región.",
    timeline: "2023",
    role: "Database Engineer",
    technologies: ["PostgreSQL", "MongoDB", "Redis", "Consul"],
    image: "https://images.unsplash.com/photo-1544383835-bda2bc66a55d?w=800&q=80",
    features: {
      replication: ["Multi-región", "Async/Sync", "Conflict Resolution"],
      monitoring: ["PgHero", "Prometheus", "Grafana"],
      backup: ["Continuous Backup", "Point-in-time Recovery"]
    },
    metrics: [
      "RPO < 1 segundo",
      "RTO < 30 segundos",
      "99.999% disponibilidad"
    ]
  },
  {
    title: "Data Warehouse Analytics",
    description: "Plataforma de análisis de datos con procesamiento distribuido.",
    timeline: "2022",
    role: "Data Engineer",
    technologies: ["ClickHouse", "Apache Kafka", "Airflow", "dbt"],
    image: "https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&q=80",
    features: {
      processing: ["Streaming", "Batch", "Real-time Analytics"],
      storage: ["Columnar Storage", "Compression", "Partitioning"],
      analytics: ["OLAP", "Custom Metrics", "Dashboards"]
    },
    metrics: [
      "PB de datos procesados",
      "Queries < 100ms",
      "Compresión 10:1"
    ]
  }
];
---

<section id="projects" class="py-32">
  <div class="container mx-auto px-6 max-w-7xl">
    <h2 class="text-4xl font-bold mb-16 text-center" data-aos="fade-up">
      Portafolio de Proyectos
    </h2>

    <!-- VPS & DevOps -->
    <div class="mb-20">
      <h3 class="text-3xl font-bold mb-8 text-emerald-500" data-aos="fade-up">
        Infraestructura & DevOps
      </h3>
      <div class="grid lg:grid-cols-2 gap-8">
        {vpsProjects.map((project, index) => (
          <div 
            class="bg-dark-800 rounded-lg overflow-hidden group hover:transform hover:scale-[1.02] transition-all duration-300"
            data-aos="fade-up"
            data-aos-delay={index * 100}
          >
            <div class="relative">
              <img 
                src={project.image} 
                alt={project.title}
                class="w-full h-64 object-cover"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-emerald-500/20 opacity-0 group-hover:opacity-100 transition-opacity"></div>
            </div>
            <div class="p-8">
              <div class="flex justify-between items-start mb-4">
                <h4 class="text-2xl font-bold">{project.title}</h4>
                <span class="text-sm text-gray-400">{project.timeline}</span>
              </div>
              <p class="text-gray-300 text-lg mb-4">{project.description}</p>
              <p class="text-emerald-500 font-bold mb-2">Rol: {project.role}</p>

              {project.infrastructure && (
                <div class="mb-6">
                  <h5 class="text-lg font-bold mb-2">Infraestructura:</h5>
                  {Object.entries(project.infrastructure).map(([key, value]) => (
                    <p class="text-gray-300 mb-2">
                      <span class="font-semibold capitalize">{key}:</span> {Array.isArray(value) ? value.join(', ') : value}
                    </p>
                  ))}
                </div>
              )}

              <div class="mb-6">
                <h5 class="text-lg font-bold mb-2">Logros:</h5>
                <ul class="list-disc list-inside text-gray-300 space-y-1">
                  {project.achievements.map(achievement => (
                    <li>{achievement}</li>
                  ))}
                </ul>
              </div>

              <div class="flex flex-wrap gap-3">
                {project.technologies.map(tech => (
                  <span class="bg-dark-700 px-4 py-2 rounded-full text-sm text-emerald-400">
                    {tech}
                  </span>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Backend -->
    <div class="mb-20">
      <h3 class="text-3xl font-bold mb-8 text-blue-500" data-aos="fade-up">
        Backend & APIs
      </h3>
      <div class="grid lg:grid-cols-2 gap-8">
        {backendProjects.map((project, index) => (
          <div 
            class="bg-dark-800 rounded-lg overflow-hidden group hover:transform hover:scale-[1.02] transition-all duration-300"
            data-aos="fade-up"
            data-aos-delay={index * 100}
          >
            <div class="relative">
              <img 
                src={project.image} 
                alt={project.title}
                class="w-full h-64 object-cover"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-blue-500/20 opacity-0 group-hover:opacity-100 transition-opacity"></div>
            </div>
            <div class="p-8">
              <div class="flex justify-between items-start mb-4">
                <h4 class="text-2xl font-bold">{project.title}</h4>
                <span class="text-sm text-gray-400">{project.timeline}</span>
              </div>
              <p class="text-gray-300 text-lg mb-4">{project.description}</p>
              <p class="text-blue-500 font-bold mb-2">Rol: {project.role}</p>

              <div class="mb-6">
                <h5 class="text-lg font-bold mb-2">Características:</h5>
                <ul class="list-disc list-inside text-gray-300 space-y-1">
                  {project.features.map(feature => (
                    <li>{feature}</li>
                  ))}
                </ul>
              </div>

              <div class="mb-6">
                <h5 class="text-lg font-bold mb-2">Métricas:</h5>
                <ul class="list-disc list-inside text-gray-300 space-y-1">
                  {project.metrics.map(metric => (
                    <li>{metric}</li>
                  ))}
                </ul>
              </div>

              <div class="flex flex-wrap gap-3">
                {project.technologies.map(tech => (
                  <span class="bg-dark-700 px-4 py-2 rounded-full text-sm text-blue-400">
                    {tech}
                  </span>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Frontend -->
    <div class="mb-20">
      <h3 class="text-3xl font-bold mb-8 text-purple-500" data-aos="fade-up">
        Frontend & UI/UX
      </h3>
      <div class="grid lg:grid-cols-2 gap-8">
        {frontendProjects.map((project, index) => (
          <div 
            class="bg-dark-800 rounded-lg overflow-hidden group hover:transform hover:scale-[1.02] transition-all duration-300"
            data-aos="fade-up"
            data-aos-delay={index * 100}
          >
            <div class="relative">
              <img 
                src={project.image} 
                alt={project.title}
                class="w-full h-64 object-cover"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity"></div>
            </div>
            <div class="p-8">
              <div class="flex justify-between items-start mb-4">
                <h4 class="text-2xl font-bold">{project.title}</h4>
                <span class="text-sm text-gray-400">{project.timeline}</span>
              </div>
              <p class="text-gray-300 text-lg mb-4">{project.description}</p>
              <p class="text-purple-500 font-bold mb-2">Rol: {project.role}</p>

              <div class="mb-6">
                <h5 class="text-lg font-bold mb-2">Características:</h5>
                <ul class="list-disc list-inside text-gray-300 space-y-1">
                  {project.features.map(feature => (
                    <li>{feature}</li>
                  ))}
                </ul>
              </div>

              <div class="mb-6">
                <h5 class="text-lg font-bold mb-2">Métricas:</h5>
                <ul class="list-disc list-inside text-gray-300 space-y-1">
                  {project.metrics.map(metric => (
                    <li>{metric}</li>
                  ))}
                </ul>
              </div>

              <div class="flex flex-wrap gap-3">
                {project.technologies.map(tech => (
                  <span class="bg-dark-700 px-4 py-2 rounded-full text-sm text-purple-400">
                    {tech}
                  </span>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Bases de Datos -->
    <div class="mb-20">
      <h3 class="text-3xl font-bold mb-8 text-amber-500" data-aos="fade-up">
        Bases de Datos & Data Engineering
      </h3>
      <div class="grid lg:grid-cols-2 gap-8">
        {databaseProjects.map((project, index) => (
          <div 
            class="bg-dark-800 rounded-lg overflow-hidden group hover:transform hover:scale-[1.02] transition-all duration-300"
            data-aos="fade-up"
            data-aos-delay={index * 100}
          >
            <div class="relative">
              <img 
                src={project.image} 
                alt={project.title}
                class="w-full h-64 object-cover"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-amber-500/20 opacity-0 group-hover:opacity-100 transition-opacity"></div>
            </div>
            <div class="p-8">
              <div class="flex justify-between items-start mb-4">
                <h4 class="text-2xl font-bold">{project.title}</h4>
                <span class="text-sm text-gray-400">{project.timeline}</span>
              </div>
              <p class="text-gray-300 text-lg mb-4">{project.description}</p>
              <p class="text-amber-500 font-bold mb-2">Rol: {project.role}</p>

              <div class="mb-6">
                <h5 class="text-lg font-bold mb-2">Características:</h5>
                {Object.entries(project.features).map(([key, value]) => (
                  <div class="mb-3">
                    <p class="font-semibold text-gray-200 capitalize mb-1">{key}:</p>
                    <ul class="list-disc list-inside text-gray-300 space-y-1">
                      {Array.isArray(value) && value.map(item => (
                        <li>{item}</li>
                      ))}
                    </ul>
                  </div>
                ))}
              </div>

              <div class="mb-6">
                <h5 class="text-lg font-bold mb-2">Métricas:</h5>
                <ul class="list-disc list-inside text-gray-300 space-y-1">
                  {project.metrics.map(metric => (
                    <li>{metric}</li>
                  ))}
                </ul>
              </div>

              <div class="flex flex-wrap gap-3">
                {project.technologies.map(tech => (
                  <span class="bg-dark-700 px-4 py-2 rounded-full text-sm text-amber-400">
                    {tech}
                  </span>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>